From bf4eb7df2253113ed55b78381b78e74034b8a00b Mon Sep 17 00:00:00 2001
From: akhilesh <akhileshpookkuttiyil@gmail.com>
Date: Fri, 25 Apr 2025 18:23:37 +0530
Subject: [PATCH 19/25] added cart CRUD

---
 client/src/Components/Navbar.jsx  | 135 +++++++++++++++++++-----------
 client/src/Context/AppContext.jsx |  37 +++++++-
 2 files changed, 118 insertions(+), 54 deletions(-)

diff --git a/client/src/Components/Navbar.jsx b/client/src/Components/Navbar.jsx
index 1625543..0f8344a 100644
--- a/client/src/Components/Navbar.jsx
+++ b/client/src/Components/Navbar.jsx
@@ -1,10 +1,10 @@
-import React, { useEffect } from "react";
+import React, { useEffect, useState } from "react";
 import { NavLink } from "react-router-dom";
 import { assets } from "../assets/assets";
 import { useAppContext } from "../Context/AppContext";
 
 const Navbar = () => {
-  const [open, setOpen] = React.useState(false);
+  const [menuOpen, setMenuOpen] = useState(false); // State for mobile menu
   const {
     user,
     setUser,
@@ -12,36 +12,43 @@ const Navbar = () => {
     navigate,
     searchQuery,
     setsearchQuery,
+    getCartCount,
   } = useAppContext();
 
-  const logout = async () => {
-    const confirmLogout = window.confirm("Are you sure you want to log out?");
-    if (confirmLogout) {
-      setUser(null);
-      navigate("/");
+  const handleLogout = async () => {
+    if (window.confirm("Are you sure you want to log out?")) {
+      setUser(null); // Clear user data
+      navigate("/"); // Redirect to home page
     }
   };
 
   useEffect(() => {
-    if (searchQuery.length > 0) {
-      navigate("/products");
+    if (searchQuery.trim().length > 0) {
+      navigate("/products"); // Navigate to products page on search query
     }
-  }, [searchQuery]);
+  }, [searchQuery, navigate]);
 
   return (
-    <nav className="flex items-center justify-between px-2 md:px-8 lg:px-12 xl:px-16 py-4 border-b border-gray-300 bg-white relative transition-all">
+    <nav
+      role="navigation"
+      aria-label="Primary Navigation"
+      className="flex items-center justify-between px-2 md:px-8 lg:px-12 xl:px-16 py-4 border-b border-gray-300 bg-white relative transition-all"
+    >
+      {/* Logo */}
       <NavLink
         to="/"
+        aria-label="Navigate to homepage"
         onClick={() => {
-          setOpen(false);
-          setsearchQuery(""); // Clear search query
+          setMenuOpen(false);
+          setsearchQuery("");
         }}
       >
-        <img className="h-10" src={assets.logo} alt="logo" />
+        <img className="h-10" src={assets.logo} alt="Company Logo" />
       </NavLink>
 
       {/* Desktop Menu */}
       <div className="hidden sm:flex items-center gap-8">
+        {/* Navigation Links */}
         <NavLink
           to="/"
           className={({ isActive }) =>
@@ -74,26 +81,28 @@ const Navbar = () => {
         <div className="hidden lg:flex items-center text-sm gap-2 border border-gray-300 px-3 rounded-full">
           <input
             aria-label="Search for products"
-            value={searchQuery} // Controlled input
-            onChange={(e) => setsearchQuery(e.target.value)} // Update the state on input change
+            value={searchQuery}
+            onChange={(e) => setsearchQuery(e.target.value)}
             className="py-1.5 w-full bg-transparent outline-none placeholder-gray-500"
             type="text"
             placeholder="Search products"
           />
-          {searchQuery.length > 0 ? (
+          {searchQuery.trim().length > 0 ? (
             <button
-              aria-label="Clear search"
-              onClick={() => setsearchQuery("")} // Clear search query
-              className="text-sm text-gray-500 hover:text-primary" // Styling for the close button
+              aria-label="Clear search query"
+              onClick={() => setsearchQuery("")}
+              className="text-sm text-gray-500 hover:text-primary"
             >
-              ✕ {/* Close button icon or text */}
+              ✕
             </button>
           ) : (
-            <img
-              src={assets.search_icon}
-              alt="search icon"
-              className="w-4 h-4 cursor-pointer"
-            />
+            <button aria-label="Search for products">
+              <img
+                src={assets.search_icon}
+                alt="Search Icon"
+                className="w-4 h-4 cursor-pointer"
+              />
+            </button>
           )}
         </div>
 
@@ -105,15 +114,15 @@ const Navbar = () => {
         >
           <img
             src={assets.nav_cart_icon}
-            alt="cart"
+            alt="Cart Icon"
             className="w-6 opacity-80"
           />
           <span className="absolute -top-2 -right-3 text-xs text-white bg-primary w-[18px] h-[18px] rounded-full">
-            3
+            {getCartCount() || 0}
           </span>
         </button>
 
-        {/* Login/Logout */}
+        {/* User Login/Logout */}
         {!user ? (
           <button
             onClick={() => setshowUserLogin(true)}
@@ -125,57 +134,83 @@ const Navbar = () => {
           <div className="relative group">
             <img
               src={assets.profile_icon}
-              alt="user"
+              alt="User Icon"
               className="w-10 h-10 rounded-full cursor-pointer"
             />
-            <ul className="hidden group-hover:block absolute top-10 right-0 bg-white shadow-md border border-gray-200 py-2.5 w-30 rounded-md text-sm z-40">
+            <ul
+              role="menu"
+              className="hidden group-hover:block absolute top-12 right-0 bg-white shadow-md border border-gray-200 py-2.5 w-30 rounded-md text-sm z-40"
+            >
               <li
+                role="menuitem"
                 onClick={() => navigate("/my-orders")}
                 className="p-1.5 pl-3 hover:bg-primary/10 cursor-pointer"
               >
                 My Orders
               </li>
               <li
-                onClick={logout}
+                role="menuitem"
+                onClick={handleLogout}
                 className="p-1.5 pl-3 hover:bg-primary/10 cursor-pointer"
               >
-                LogOut
+                Log Out
               </li>
             </ul>
           </div>
         )}
       </div>
 
-      {/* Mobile Menu Toggle */}
-      <button
-        onClick={() => setOpen(!open)}
-        aria-label="Menu"
-        className="sm:hidden"
-      >
-        <img src={assets.menu_icon} alt="menu icon" />
-      </button>
+      {/* Mobile Menu */}
+      <div className="flex items-center gap-6 sm:hidden">
+        {/* Cart Button */}
+        <button
+          aria-label="Open cart"
+          onClick={() => navigate("/cart")}
+          className="relative cursor-pointer"
+        >
+          <img
+            src={assets.nav_cart_icon}
+            alt="Cart Icon"
+            className="w-6 opacity-80"
+          />
+          <span className="absolute -top-2 -right-3 text-xs text-white bg-primary w-[18px] h-[18px] rounded-full">
+            {getCartCount() || 0}
+          </span>
+        </button>
+
+        {/* Menu Toggle */}
+        <button
+          aria-label="Toggle mobile menu"
+          onClick={() => setMenuOpen(!menuOpen)}
+        >
+          <img src={assets.menu_icon} alt="Menu Icon" />
+        </button>
+      </div>
 
       {/* Mobile Menu */}
-      {open && (
-        <div className="absolute top-[60px] left-0 w-full bg-white shadow-md py-4 flex-col items-start gap-2 px-5 text-sm md:hidden">
-          <NavLink to="/" onClick={() => setOpen(false)}>
+      {menuOpen && (
+        <div
+          role="menu"
+          className="absolute top-[60px] left-0 w-full bg-white shadow-md py-4 flex flex-col items-start gap-2 px-5 text-sm md:hidden"
+        >
+          <NavLink to="/" onClick={() => setMenuOpen(false)}>
             Home
           </NavLink>
-          <NavLink to="/products" onClick={() => setOpen(false)}>
+          <NavLink to="/products" onClick={() => setMenuOpen(false)}>
             All Products
           </NavLink>
           {user && (
-            <NavLink to="/orders" onClick={() => setOpen(false)}>
+            <NavLink to="/my-orders" onClick={() => setMenuOpen(false)}>
               My Orders
             </NavLink>
           )}
-          <NavLink to="/contact" onClick={() => setOpen(false)}>
+          <NavLink to="/contact" onClick={() => setMenuOpen(false)}>
             Contact
           </NavLink>
           {!user ? (
             <button
               onClick={() => {
-                setOpen(false);
+                setMenuOpen(false);
                 setshowUserLogin(true);
               }}
               className="cursor-pointer px-6 py-2 mt-2 bg-primary hover:bg-primary transition text-white rounded-full text-sm"
@@ -184,10 +219,10 @@ const Navbar = () => {
             </button>
           ) : (
             <button
-              onClick={logout}
+              onClick={handleLogout}
               className="cursor-pointer px-6 py-2 mt-2 bg-primary hover:bg-primary transition text-white rounded-full text-sm"
             >
-              Logout
+              Log Out
             </button>
           )}
         </div>
diff --git a/client/src/Context/AppContext.jsx b/client/src/Context/AppContext.jsx
index 139efdc..80afbda 100644
--- a/client/src/Context/AppContext.jsx
+++ b/client/src/Context/AppContext.jsx
@@ -6,8 +6,10 @@ import toast from "react-hot-toast";
 export const AppContext = createContext();
 
 export const AppContextProvider = ({ children }) => {
-  const currency = import.meta.env.VITE_CURRENCY;
+  const currency = import.meta.env.VITE_CURRENCY; // App currency from environment
   const navigate = useNavigate();
+
+  // State variables
   const [user, setUser] = useState(null);
   const [isSeller, setIsSeller] = useState(false);
   const [showUserLogin, setshowUserLogin] = useState(false);
@@ -15,16 +17,16 @@ export const AppContextProvider = ({ children }) => {
   const [cartItems, setcartItems] = useState({});
   const [searchQuery, setsearchQuery] = useState("");
 
-  
-  
+  // Fetch dummy products
   const fetchProducts = async () => {
     try {
-      setProducts(dummyProducts);
+      setProducts(dummyProducts); // Replace with API logic if needed
     } catch (error) {
       console.error("Error fetching products:", error);
     }
   };
 
+  // Add item to cart
   const addToCart = (itemId) => {
     setcartItems((prevCart) => {
       let cartData = { ...prevCart };
@@ -37,6 +39,7 @@ export const AppContextProvider = ({ children }) => {
     });
   };
 
+  // Update item quantity in cart
   const updateCartItem = (itemId, quantity) => {
     setcartItems((prevCart) => {
       let cartData = { ...prevCart };
@@ -49,6 +52,7 @@ export const AppContextProvider = ({ children }) => {
     });
   };
 
+  // Remove item from cart
   const removeFromCart = (itemId) => {
     setcartItems((prevCart) => {
       let cartData = { ...prevCart };
@@ -66,10 +70,33 @@ export const AppContextProvider = ({ children }) => {
     });
   };
 
+  // Get total item count in cart
+  const getCartCount = () => {
+    let totalCount = 0;
+    for (const item in cartItems) {
+      totalCount += cartItems[item];
+    }
+    return totalCount;
+  };
+
+  // Calculate total price of items in the cart
+  const getCartAmount = () => {
+    let totalAmount = 0;
+    for (const item in cartItems) {
+      const product = products.find((product) => product._id === item);
+      if (product) {
+        totalAmount += product.offerPrice * cartItems[item];
+      }
+    }
+    return Math.floor(totalAmount * 100) / 100; // Round to 2 decimal places
+  };
+
+  // Load products on component mount
   useEffect(() => {
     fetchProducts();
   }, []);
 
+  // Shared context value
   const value = {
     navigate,
     user,
@@ -86,6 +113,8 @@ export const AppContextProvider = ({ children }) => {
     cartItems,
     searchQuery,
     setsearchQuery,
+    getCartAmount,
+    getCartCount,
   };
 
   return <AppContext.Provider value={value}>{children}</AppContext.Provider>;
-- 
2.46.1.windows.1

